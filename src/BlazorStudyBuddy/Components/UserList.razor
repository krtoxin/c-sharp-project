@page "/users"
@using StudyBuddy.Core.DTOs
@using StudyBuddyWebBlazor.Services
@inject UserService UserService

<h3>Список користувачів</h3>

<table class="table">
    <thead>
        <tr>
            <th>Ім'я</th>
            <th>Email</th>
            <th>Ролі</th>
            <th>Дії</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Users)
        {
            <tr>
                <td>@user.FullName</td>
                <td>@user.Email</td>
                <td>@(user.Roles != null ? string.Join(", ", user.Roles) : "Немає ролей")</td>
                <td>
                    <button class="btn btn-warning" @onclick="() => EditUser(user)">Редагувати</button>
                    <button class="btn btn-danger" @onclick="() => DeleteUser(user.Id)">Видалити</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<UserForm @ref="userForm" OnSave="LoadUsers" />

@code {
    private List<UserWithRolesDto> Users = new();
    private UserForm userForm;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        Users = await UserService.GetAllUsersAsync();
    }

    private void EditUser(UserWithRolesDto user)
    {
    }

    private async Task DeleteUser(string id)
    {
        await UserService.DeleteUserAsync(id);
        await LoadUsers();
    }
}
