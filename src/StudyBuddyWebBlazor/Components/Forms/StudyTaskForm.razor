@using StudyBuddy.Core.Entities
@using StudyBuddy.Core.Enums
@code {
    [Parameter] public EventCallback OnSave { get; set; }
    [Parameter] public EventCallback<StudyTask> OnChanged { get; set; } // optional output binding

    private StudyTask TaskModel = new()
        {
            Question = string.Empty,
            TaskType = TaskType.OpenEnded,
            Options = new List<TaskOption>()
        };

    private bool IsEdit = false;

    public void Edit(StudyTask task)
    {
        TaskModel = new StudyTask
            {
                Id = task.Id,
                Question = task.Question,
                TaskType = task.TaskType,
                SolutionHint = task.SolutionHint,
                SubTopicId = task.SubTopicId,
                Options = task.Options?.Select(opt => new TaskOption
                {
                    Id = opt.Id,
                    Text = opt.Text,
                    IsCorrect = opt.IsCorrect
                }).ToList() ?? new()
            };
        IsEdit = true;
    }

    private void AddOption()
    {
        TaskModel.Options.Add(new TaskOption
            {
                Text = string.Empty,
                IsCorrect = false
            });
    }

    private void RemoveOption(TaskOption option)
    {
        TaskModel.Options.Remove(option);
    }

    private async Task Save()
    {
        IsEdit = false;
        await OnSave.InvokeAsync();
        await OnChanged.InvokeAsync(TaskModel); // optional: pass back the task
    }
}
