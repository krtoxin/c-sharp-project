@page "/register"
@using System.ComponentModel.DataAnnotations
@using StudyBuddy.Core.DTOs
@using StudyBuddyWebBlazor.Services
@inject ApiUserService UserService
@inject NavigationManager NavigationManager

<div class="register-container">
    <div class="register-box">
        <h2>Create Account</h2>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="error">@ErrorMessage</div>
        }

        <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label>Full Name</label>
                <InputText @bind-Value="registerModel.FullName" class="form-control" />
            </div>

            <div class="mb-3">
                <label>Username</label>
                <InputText @bind-Value="registerModel.UserName" class="form-control" />
            </div>

            <div class="mb-3">
                <label>Email</label>
                <InputText @bind-Value="registerModel.Email" class="form-control" />
            </div>

            <div class="mb-3">
                <label>Password</label>
                <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
            </div>

            <button type="submit" class="btn-register">Register</button>
        </EditForm>

        <div class="login-link">
            Already have an account? <a href="/login">Login</a>
        </div>
    </div>
</div>

@code {
    private RegisterDto registerModel = new();
    private string? ErrorMessage;

    private async Task HandleRegister()
    {
        var result = await UserService.RegisterAsync(registerModel);
        if (!result.IsSuccess)
        {
            ErrorMessage = string.Join(", ", result.Errors);
        }
        else
        {
            ErrorMessage = null;
            NavigationManager.NavigateTo("/login");
        }
    }
}
